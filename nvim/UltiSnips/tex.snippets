#cen - center
#sec - section
#subsec - subsection
#numlist - numbered list
#list - simple list
#charsize - 
#code - minted code
#image - include image
#sk skeleton
#info - create the info header
#tex - import tex document
#header - header for preview
#color - changes text color
# cover - template for cover english
# portada - template para portada
# reference - a clickabel link in text
# url - a url link
# figure -- for a figure














# ==========================
# ========== global snippets ======
# ==========================

global !p
def create_matrix_placeholders(snip):
	# Create anonymous snippet body
	anon_snippet_body = ""
	# Get start and end line number of expanded snippet
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]
  # Append current line into anonymous snippet
	for i in range(start, end + 1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else "\n"
	# Delete expanded snippet line till second to last line
	for i in range(start, end):
		del snip.buffer[start]
	# Empty last expanded snippet line while preserving the line
	snip.buffer[start] = ''
	# Expand anonymous snippet
	snip.expand_anon(anon_snippet_body)
endglobal
post_jump "snip"
global !p
def returnCommandSplitted(command):
	cmd_arr = command.split('_')
	return_command = ""
	for a in cmd_arr:
		return_command += a + " "
	return_command = return_command[0:len(return_command)-1]
	return return_command
endglobal

post_jump "snip"
global !p

def parseStatement(i,j,k,stri):
	prev = ''
	twoBehind=''
	ans = ""
	for ch in stri:

		if ( ch == 'k' or ch == 'i' or ch == 'j' )  and prev == '$' and twoBehind == '\\':
			ans = ans[:-2]
			ans+=ch

		elif ch == 'i' and prev == '$' and twoBehind != '\\':
			ans = ans[:-1]
			ans+=str(i)
		elif ch == 'j' and prev == '$' and twoBehind != '\\':
			ans = ans[:-1]
			ans+=str(j)
		elif ch == 'k' and prev == '$' and twoBehind != '\\':
			ans = ans[:-1]
			ans+=str(k)
		elif ch == 'n' and prev == '\\':
			ans = ans[:-1]
			ans+="\n"

		else :
			ans+=ch

		twoBehind = prev
		prev = ch
	return ans

endglobal

global !p
def getMatchArr():
	cont=1
	arr = []
	while 1 :
		try :
			arr.append(match.group(cont))
			cont+=1
		except :
			break
	return arr
endglobal
snippet portada
\begin{center}

	%TÃ­tulo del trabajo
	\huge\textbf{
		$1
	}\linebreak[4]

	\huge\textbf{
		$2
	}\linebreak[4]

	\LARGE\textbf{
		$3
	}\linebreak[4]

	\LARGE\textbf{
		$4
	}\linebreak[4]
	\newline
	\newline
	\newline
	\newline
	\begin{LARGE}

\color{blue}

	Date: `date +%d/%B/%Y\ -\ %A`

	Author: Virgilio Murillo Ochoa

	personal github: Virgilio-AI

	linkedin: https://www.linkedin.com/in/virgilio-murillo-ochoa-b29b59203

\color{blue}

	\end{LARGE}
\end{center}
\newpage
endsnippet






snippet color
\textcolor{$1}{}
endsnippet

snippet header
% !TEX root = % !TEX root = ${1:<root-filename>}
endsnippet

snippet tex
\import{${1:path}/}{${2:name}}
endsnippet

snippet cen
\begin{center}
	$1
\end{center}
$2
endsnippet
snippet sec
\begin{section}{$1}
	$2
\end{section}
endsnippet
snippet subsec
\begin{subsection}{$1}
	$2
\end{subsection}
endsnippet
snippet numlist
\begin{enumerate}
	$1
\end{enumerate}
endsnippet 

snippet list
\begin{itemize}
	$1
\end{itemize}
endsnippet 
snippet charsize
% Huge huge LARGE Large large normalsize(default) small footnotesize scriptsize tiny
\begin{$1}
	$2
\end{$1}
endsnippet
snippet code
\begin{minted}{$1}
	$2
\end{minted}
endsnippet
snippet image
\includegraphics[${1:width=\textwidth,height=\textheight,keepaspectratio}]{$2}
$2
endsnippet
snippet sk

% Date: `date +%d/%B/%Y\ -\ %A`
% Author: Virgilio Murillo Ochoa
% personal github: Virgilio-AI
% linkedin: https://www.linkedin.com/in/virgilio-murillo-ochoa-b29b59203
% contact: virgiliomurilloochoa1@gmail.com
% web: virgiliomurillo.com

\documentclass[15pt]{extarticle}
\usepackage[utf8]{inputenc}

%personal information
\title{${2:Title}}
\author{Virgilio Murillo Ochoa}
\makeindex
%langauge of the document spanish english french
\usepackage[$1]{babel}
\usepackage{graphicx}
\usepackage[margin=1.0in]{geometry}
\usepackage{authblk}
\usepackage{multicol}
\usepackage{minted}
\usepackage{amsmath}
\usepackage{array}
\usepackage[export]{adjustbox}
\usepackage{amssymb}

%\usepackage{example}
\usepackage{makeidx}
%to set the references inside the document
\usepackage{url}
%so that references don't get out of the file
\makeatletter
\g@addto@macro{\UrlBreaks}{\UrlOrds}
\makeatother

%to import and to use reference

\usepackage{import}
\usepackage[colorlinks]{hyperref}
\usepackage{xcolor}
\usepackage{hyperref}
\hypersetup{
colorlinks = true,
urlcolor=blue
}
\newcommand{\sech}{\mathrm{sech} \,}
\newcommand{\csch}{\mathrm{csch} \,}

\begin{document}

$3

\end{document}
endsnippet

snippet info
% Date: `date +%d/%B/%Y\ -\ %A`
% Author: Virgilio Murillo Ochoa
% personal github: Virgilio-AI
% linkedin: https://www.linkedin.com/in/virgilio-murillo-ochoa-b29b59203
endsnippet

snippet reference
\href{${1:url}}{${2:text}}
endsnippet


snippet url
\url{${1:link}}
endsnippet


# options im-> inword
snippet figure "for an image figure"
		\begin{figure}[h]
			\begin{center}
			% incluya aqui la image con \p
			\end{center}
		\end{figure}
endsnippet
